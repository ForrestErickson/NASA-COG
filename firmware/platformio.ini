; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html
;
; Public Invention's Ox Project is an open source hardware design for an oxygen concentrator for use by field hospitals around the world. This design concept aims to design an oxygen concentrator that can be manufactured locally while overcoming challenges posed by human resources, hospital location (geographically), infrastructure and logistics; in addition, this project attempts minimum documentation of their design standards necessary for local approval whilst tackling regulatory  ;requirements for medical devices. Copyright (C) 2021 Robert Read, Ben Coombs, and Darío Hereñú.
;
; This program is free Firmware/Hardware designs: you can redistribute, use, study it and/or modify it under the terms of the CERN Open Hardware License Version 2 as published here: https://ohwr.org/cern_ohl_s_v2.txt
;
; This program is distributed in the hope that it will be useful,
; but WITHOUT ANY WARRANTY; without even the implied warranty of
; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
;
; See the CERN Open Hardware License Version 2 for more details.
; You should have received a copy of the CERN Open Hardware License Version 2 along with this program.  If not, see https://ohwr.org/cern_ohl_s_v2.txt.

[common]
build_flags =
	-D VERSION=0.1.0
	-D DEBUG=1
 	-std=c++11

[embedded]
lib_deps =
	adafruit/Adafruit GFX Library@^1.10.1
	adafruit/Adafruit BusIO@^1.5.0
	adafruit/Adafruit ILI9341@^1.5.6
	SPI
	Wire

[env:featheresp32]
platform = espressif32
board = featheresp32
framework = arduino
lib_deps = ${embedded.lib_deps}
targets = upload, monitor
monitor_speed = 115200

[env:native]
platform = native
lib_ignore =
	${embedded.lib_deps}
	display
lib_ldf_mode = chain+
lib_compat_mode = off
build_flags = ${common.build_flags} -Wall
